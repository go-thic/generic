---
#########################
#########################
## Golang Linter rules ##
#########################
#########################

# configure golangci-lint
# see https://github.com/golangci/golangci-lint/blob/master/.golangci.example.yml
run:
  timeout: 2m
  skip-dirs:
    - apispecs
    - db
    - docs
    - generated
    - k8s
    - local-dev

issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - errcheck
        - dupl
        - gosec
        - goconst
        - deadcode
        - unused

linters:
  enable:
    - errcheck
    - revive
    - govet
    - gosimple
    - gosec
    - unconvert
    - gocyclo
    - goconst
    - goimports
    - gocritic

linters-settings:
  errcheck:
    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # default is false: such cases aren't reported by default.
    check-blank: true

  gocyclo:
    # minimal code complexity to report, 30 by default
    min-complexity: 15

  gosimple:
    # Select the Go version to target. The default is '1.13'.
    go: "1.16"

  govet:
    # report about shadowed variables
    check-shadowing: true

    # settings per analyzer
    settings:
      printf: # analyzer name, run `go tool vet help` to see all analyzers
        funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf

    # enable or disable analyzers by name
    # run `go tool vet help` to see all analyzers
    enable:
      - atomicalign
    enable-all: false
    disable:
      - shadow
    disable-all: false

  revive:
    rules:
      - name: var-naming
        severity: warning
        disabled: false
        arguments:
        - [ "API", "HTTP", "ID", "JSON", "URL" ] # AllowList
        - [] # DenyList
        
